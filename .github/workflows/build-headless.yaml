name: Build projects
on:
  push:
    branches:
     - main
  pull_request:

  # enable manual triggering
  workflow_dispatch:
  
jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update no-OS submodule
        run: |
          git submodule update --init libraries/no-OS
          
      - name: Get Commit ID
        run: |
          commit_id=$(git rev-parse --short HEAD)
          echo "Commit ID: $commit_id"    
          echo "COMMITS_ID=$commit_id" >> $GITHUB_ENV  # Store commit_id

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    strategy:
      matrix:
        project:
          - ad405x_iio
         # - ad469x_iio  
          
    # Pull the container from the private repository
    container:
      image: ghcr.io/noahp/stm32wba55-example:2024-08-01
      #options: --user root
      #credentials:
       # username: ${{ secrets.ARTIFACT_USERNAME }}
        #password: ${{ secrets.ARTIFACT_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build project
        run: |
          # Check contents of the root directory
          echo "Listing root directory:"
          ls -la /
          
          echo "Check pwd"
          pwd
          
          # Check contents of /opt directory
          echo "Listing /opt directory:"
          ls -la /opt
          
          echo "Step commit id: ${{ env.COMMITS_ID }}"
         
          /opt/st/stm32cubeide_1.16.0/stm32cubeide --launcher.suppressErrors -nosplash \
            -application org.eclipse.cdt.managedbuilder.core.headlessbuild \
            -data /tmp/stm-workspace \
            -import "projects/${{ matrix.project }}/STM32"

          /opt/st/stm32cubeide_1.16.0/stm32cubeide --launcher.suppressErrors -nosplash \
            -application org.eclipse.cdt.managedbuilder.core.headlessbuild \
            -data /tmp/stm-workspace \
            -build ${{ matrix.project }}/Debug  \
            -D FIRMWARE_VERSION=${{ env.COMMITS_ID }}
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}
          # The output artifacts are BLE_p2pServer.elf, BLE_p2pServer.map, etc.
          # Use a wildcard pattern to get them all
          path: projects/${{ matrix.project }}/STM32/Debug/${{ matrix.project }}.bin
          

